import os
from flask import Flask, request
import telebot
from telebot import types
from PIL import Image, ImageDraw, ImageFont
import io

app = Flask(__name__)
TOKEN = os.getenv("TELEGRAM_TOKEN")
bot = telebot.TeleBot(TOKEN)

# –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ü–≤–µ—Ç, —à—Ä–∏—Ñ—Ç)
user_data = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞
def color_keyboard():
    markup = types.ReplyKeyboardMarkup(row_width=3)
    btn1 = types.KeyboardButton("‚ö™ –ë–µ–ª—ã–π")
    btn2 = types.KeyboardButton("‚ö´ –ß–µ—Ä–Ω—ã–π")
    btn3 = types.KeyboardButton("üî¥ –ö—Ä–∞—Å–Ω—ã–π")
    markup.add(btn1, btn2, btn3)
    return markup

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
def font_keyboard():
    markup = types.ReplyKeyboardMarkup(row_width=3)
    btn1 = types.KeyboardButton("Arial")
    btn2 = types.KeyboardButton("Comic Sans")
    btn3 = types.KeyboardButton("Times New Roman")
    markup.add(btn1, btn2, btn3)
    return markup

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üëï –ü—Ä–∏–≤–µ—Ç! –Ø —Å–æ–∑–¥–∞–º —Ñ—É—Ç–±–æ–ª–∫—É —Å —Ç–≤–æ–∏–º —Ç–µ–∫—Å—Ç–æ–º.\n"
        "‚û°Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç —Ñ—É—Ç–±–æ–ª–∫–∏:",
        reply_markup=color_keyboard()
    )

# –í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞
@bot.message_handler(func=lambda m: m.text in ["‚ö™ –ë–µ–ª—ã–π", "‚ö´ –ß–µ—Ä–Ω—ã–π", "üî¥ –ö—Ä–∞—Å–Ω—ã–π"])
def choose_color(message):
    color_map = {
        "‚ö™ –ë–µ–ª—ã–π": "white",
        "‚ö´ –ß–µ—Ä–Ω—ã–π": "black",
        "üî¥ –ö—Ä–∞—Å–Ω—ã–π": "red"
    }
    user_data[message.chat.id] = {"color": color_map[message.text]}
    bot.send_message(
        message.chat.id,
        "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —à—Ä–∏—Ñ—Ç:",
        reply_markup=font_keyboard()
    )

# –í—ã–±–æ—Ä —à—Ä–∏—Ñ—Ç–∞
@bot.message_handler(func=lambda m: m.text in ["Arial", "Comic Sans", "Times New Roman"])
def choose_font(message):
    if message.chat.id not in user_data:
        return start(message)
    
    font_map = {
        "Arial": "arial.ttf",
        "Comic Sans": "comic.ttf",
        "Times New Roman": "times.ttf"
    }
    user_data[message.chat.id]["font"] = font_map[message.text]
    bot.send_message(
        message.chat.id,
        "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –Ω–∞–Ω–µ—Å—Ç–∏ –Ω–∞ —Ñ—É—Ç–±–æ–ª–∫—É:",
        reply_markup=types.ReplyKeyboardRemove()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler(func=lambda m: True, content_types=['text'])
def handle_text(message):
    if message.chat.id not in user_data or "font" not in user_data[message.chat.id]:
        return start(message)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω
    color = user_data[message.chat.id]["color"]
    shirt = Image.open(f"templates/{color}.png")
    draw = ImageDraw.Draw(shirt)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —à—Ä–∏—Ñ—Ç–∞
    font_path = f"fonts/{user_data[message.chat.id]['font']}"
    font = ImageFont.truetype(font_path, 40)
    
    # –†–∞–∑–º–µ—â–∞–µ–º —Ç–µ–∫—Å—Ç
    text = message.text
    text_width = draw.textlength(text, font=font)
    x = (shirt.width - text_width) // 2
    y = shirt.height // 2
    draw.text((x, y), text, font=font, fill="black")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    img_byte_arr = io.BytesIO()
    shirt.save(img_byte_arr, format='PNG')
    img_byte_arr.seek(0)
    bot.send_photo(message.chat.id, img_byte_arr)

# –í–µ–±—Ö—É–∫ –¥–ª—è Vercel
@app.route('/', methods=['GET'])
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route('/webhook', methods=['POST'])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        update = telebot.types.Update.de_json(request.stream.read().decode('utf-8'))
        bot.process_new_updates([update])
        return 'OK', 200
    return 'Error', 403

if __name__ == '__main__':
    bot.remove_webhook()
    bot.set_webhook(url="https://–í–ê–®_–ü–†–û–ï–ö–¢.vercel.app/webhook")
    app.run()
